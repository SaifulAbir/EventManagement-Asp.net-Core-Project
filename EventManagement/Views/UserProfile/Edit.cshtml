@model EventManagement.Models.Registration
@{
    Layout = "~/Views/Shared/_LayoutCustomer.cshtml";
}
<section class="signin-page account">
        <div class="container">
            <div class="row">
                <div class="col-md-6 mx-auto">
                    @if (TempData["UpdateMessage"] != null)
                    {
                        <p class="alert alert-success" id="successMessage">@TempData["UpdateMessage"] <a class="btn btn-success" href="/UserProfile/Profile">See Profile </a></p>
                    }
                    @Html.ValidationSummary()
                    @Html.ValidationSummary(true)
                    <div class="block text-center">
                        <a class="logo" href="index.html">
                            <img src="~/images/logo.svg" alt="logo">
                        </a>
                        <h2 class="text-center">Edit Your Profile</h2>

                        <form method="post" enctype="multipart/form-data" asp-controller="UserProfile" asp-action="Edit">
                            <input asp-for="ID" type="hidden" />
                            <div class="form-group text-left">
                                <label class="control-label" asp-for="Name">Name</label>
                                <input asp-for="Name" type="text" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>
                            <div class="form-group text-left">
                                <label class="control-label" asp-for="Mobileno">Mobile Number</label>
                                <input asp-for="Mobileno" maxlength="11" name="Mobileno" onkeydown="return OnlyNumeric(this);" type="text" class="form-control" />
                                <span asp-validation-for="Mobileno" class="text-danger"></span>
                            </div>
                            <div class="form-group text-left">
                                <label class="control-label" asp-for="Address">Address</label>
                                <input asp-for="Address" type="text" class="form-control" />
                                <span asp-validation-for="Address" class="text-danger"></span>
                            </div>


                            <div class="form-group text-left">
                                <label class="control-label" asp-for="EmailID">Email</label>
                                <input asp-for="EmailID" type="text" class="form-control" />
                                <span asp-validation-for="EmailID" class="text-danger"></span>
                            </div>

                            <div class="form-group text-left">
                                <label class="control-label" asp-for="Country">Country</label>
                                <select asp-for="Country"
                                        class="form-control"
                                        asp-items="@(new SelectList(string.Empty,"CountryID", "Name"))"></select>
                                <span asp-validation-for="Country" class="text-danger"></span>
                            </div>


                            <div class="form-group text-left">
                                <label class="control-label" asp-for="State">State</label>
                                <select asp-for="State" class="form-control"
                                        asp-items="@(new SelectList(string.Empty,"StateID", "StateName"))"></select>
                                <span asp-validation-for="State" class="text-danger"></span>
                            </div>
                            <div class="form-group text-left">
                                <label class="control-label" asp-for="City">City</label>
                                <select asp-for="City" class="form-control"
                                        asp-items="@(new SelectList(string.Empty,"CityID", "CityName"))"></select>
                                <span asp-validation-for="City" class="text-danger"></span>
                            </div>
                            <div class="row">
                                <div class="col-lg-6 text-left">
                                    <label class="control-label" asp-for="Birthdate">Birthdate</label>
                                    <input asp-for="Birthdate" id="Birthdate" type="date" class="form-control" />
                                    <span asp-validation-for="Birthdate" class="text-danger"></span>
                                </div>
                                <div class="col-lg-6 text-left">
                                    <br />
                                    <br />
                                    <label class="control-label" asp-for="Gender">Gender&nbsp;</label>
                                    <input asp-for="Gender" type="radio" value="M" /> @Html.Label("", "Male")
                                    <input asp-for="Gender" type="radio" value="F" />@Html.Label("", "Female")
                                    <br />
                                    <span asp-validation-for="Gender" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="text-center">
                                <br />
                                <input id="Submit" type="submit" class="btn btn-success" value="Update" />
                            </div>



                        </form>

                    </div>
                </div>
            </div>
        </div>
</section>


<script type="text/javascript">
    $(document).ready(function ()
    {
        $.getJSON( '@Url.Content("~/")' + "api/CountryAPI", function (data)
        {
            var items = '';
            $("#Country").empty();
            $.each(data, function (i, subcategory)
            {
                if (i == 0)
                {
                    items += "<option value='" + "" + "'>" + "Select Country" + "</option>";
                }
                else
                {
                    items += "<option value='" + subcategory.CountryID + "'>" + subcategory.Name + "</option>";
                }
            });
            $('#Country').html(items);

               if ('@Model.Country' !='')
               {
                   $('#Country').val('@Model.Country');
               }
        });

        $('#Country').change(function ()
        {
            var url = '@Url.Content("~/")' + "api/StateAPI";
                var ddlsource = "#Country";
                $.post(url, { id: $(ddlsource).val() }, function (data)
                {
                    var items = '';
                    $("#State").empty();
                    $.each(data, function (i, subcategory)
                    {
                        if (i == 0) {
                            items += "<option value='" + "" + "'>" + " Select State" + "</option>";
                        }
                        else {
                            items += "<option value='" + subcategory.StateID + "'>" + subcategory.StateName + "</option>";
                        }

                    });
                    $('#State').html(items);

                });
          });

        $('#State').change(function ()
            {
             var url = '@Url.Content("~/")' + "api/CityAPI";
             var ddlsource = "#State";
                $.post(url, { id: $(ddlsource).val() }, function (data)
                {
                    var items = '';
                    $("#City").empty();
                    $.each(data, function (i, subcategory) {
                        items += "<option value='" + subcategory.CityID + "'>" + subcategory.CityName + "</option>";
                    });
                    $('#City').html(items);
                });
        });

        RebindState();
    });


    function RebindState()
    {
        if ('@Model.Country' != '')
        {
                var url = '@Url.Content("~/")' + "api/StateAPI";
                var ddlsource = "#Country";
                $.post(url, { id: '@Model.Country' }, function (data)
                {
                    var items = '';
                    $("#State").empty();
                    $.each(data, function (i, subcategory)
                    {
                        items += "<option value='" + subcategory.StateID + "'>" + subcategory.StateName + "</option>";
                    });
                    $('#State').html(items);

                    if ('@Model.State' !='')
                     {
                        $('#State').val('@Model.State');
                        RebindCities();
                     }
                });

        }
    }

    function RebindCities()
    {
        if ('@Model.State' != '')
        {
             var url = '@Url.Content("~/")' + "api/CityAPI";
             var ddlsource = "#State";
                $.post(url, { id: '@Model.State' }, function (data)
                {
                    var items = '';
                    $("#City").empty();
                    $.each(data, function (i, subcategory) {
                        items += "<option value='" + subcategory.CityID + "'>" + subcategory.CityName + "</option>";
                    });
                    $('#City').html(items);

                     if ('@Model.City' !='')
                     {
                         $('#City').val('@Model.City');
                     }
                });
        }
    }


</script>
<script type="text/javascript">

    $(document).ready(function ()
    {
        $("#Birthdate").datepicker
            ({
            dateFormat: "yy-mm-dd",
            changeMonth: true,
            changeYear: true,
            yearRange: "-100:+100",
            onSelect: function (date)
            {
                var dob = new Date(date);
                var today = new Date();

                if (dob.getFullYear() + 18 < today.getFullYear())
                {

                }
                else
                {
                    $("#Birthdate").val('');
                    alert("You are not eligible for Registration");
                }
            }
        });
    });

    function OnlyNumeric(evt)
    {
        var charCode = (evt.which) ? evt.which : evt.keyCode
        if ((charCode < 48 || charCode > 57))
        {
            if (charCode == 8 || charCode == 46 || charCode == 0)
            {
                return true;
            }
            else {
                return false;
            }
        }
    }


</script>

